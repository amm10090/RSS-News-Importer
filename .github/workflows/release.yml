name: 创建发布

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: 创建发布
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 添加写入权限
    steps:
      - name: 检出代码
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 设置 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # 使用 Node.js 16 版本

      - name: 设置项目信息
        id: project_info
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "PROJECT_NAME=RSS News Importer" >> $GITHUB_OUTPUT
          echo "PROJECT_PATH=${{ github.workspace }}" >> $GITHUB_OUTPUT

      - name: 显示当前目录结构
        run: |
          echo "当前目录结构:"
          ls -R

      - name: 创建ZIP文件
        id: create_zip
        run: |
          echo "当前目录结构："
          ls -R
          
          # 获取当前目录名
          CURRENT_DIR=$(basename "$PWD")
          
          if [ "$CURRENT_DIR" = "RSS News Importer" ]; then
            # 如果当前已经在正确的目录中
            cd ..
            ZIP_FILE="${{ steps.project_info.outputs.RELEASE_VERSION }}.RSS-News-Importer.zip"
            zip -r "$ZIP_FILE" "RSS News Importer" -x '*.git*' '.github/*'
          else
            # 如果需要创建新目录
            TEMP_DIR="RSS News Importer"
            mkdir -p "$TEMP_DIR"
            cp -R ./* "$TEMP_DIR" || true
            cp -R ./.* "$TEMP_DIR" || true
            ZIP_FILE="${{ steps.project_info.outputs.RELEASE_VERSION }}.RSS-News-Importer.zip"
            zip -r "$ZIP_FILE" "$TEMP_DIR" -x '*.git*' '.github/*'
            rm -rf "$TEMP_DIR"
          fi
          
          echo "项目文件已成功压缩为 $ZIP_FILE"
          echo "ZIP_FILE=$ZIP_FILE" >> $GITHUB_OUTPUT

          # 显示 ZIP 文件内容
          unzip -l "$ZIP_FILE"

      - name: 检查ZIP文件
        run: |
          if [ ! -f "${{ steps.create_zip.outputs.ZIP_FILE }}" ]; then
            echo "错误：ZIP文件未创建"
            exit 1
          fi
          echo "ZIP文件创建成功：${{ steps.create_zip.outputs.ZIP_FILE }}"
          ls -l "${{ steps.create_zip.outputs.ZIP_FILE }}"

      - name: 获取最近提交
        run: |
          COMMITS=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 @^)..@ | sed 's/^/  /')
          echo "RECENT_COMMITS<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: 生成发布说明
        run: |
          echo "${{ steps.project_info.outputs.PROJECT_NAME }} ${{ steps.project_info.outputs.RELEASE_VERSION }} 发布说明" > release_notes.md
          echo "" >> release_notes.md
          echo "最近更改:" >> release_notes.md
          echo "${{ env.RECENT_COMMITS }}" >> release_notes.md

      - name: 创建发布
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ ! -f "${{ steps.create_zip.outputs.ZIP_FILE }}" ]; then
            echo "错误：ZIP文件不存在"
            exit 1
          fi
          gh release create ${{ steps.project_info.outputs.RELEASE_VERSION }} \
            --title "${{ steps.project_info.outputs.PROJECT_NAME }} ${{ steps.project_info.outputs.RELEASE_VERSION }}" \
            --notes-file release_notes.md \
            "${{ steps.create_zip.outputs.ZIP_FILE }}"

      - name: 清理
        if: always()
        run: |
          rm -f "${{ steps.create_zip.outputs.ZIP_FILE }}"
          rm -f release_notes.md